<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitauto.bdc.modules.hdfs.dao.HdfsSmallFileDao">

    <resultMap type="com.bitauto.bdc.modules.hdfs.entity.HdfsSmallFileEntity" id="hdfsSmallfileMap">
        <result property="hdfsSmallfileId" column="hdfs_smallfiles_id"/>
        <result property="directory" column="directory"/>
        <result property="fileCount" column="file_count"/>
        <result property="avgSize" column="avg_size"/>
        <result property="totalSize" column="total_size"/>
        <result property="username" column="username"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <select id="queryList" resultType="com.bitauto.bdc.modules.hdfs.entity.HdfsSmallFileEntity">
        select * from tb_hdfs_smallfile
        <if test="directory != null and directory.trim() != ''">
            WHERE `directory`  = #{directory}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by hdfs_smallfiles_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from tb_hdfs_smallfile
        <if test="directory != null and directory.trim() != ''">
            WHERE `directory` = #{directory}
        </if>
    </select>

    <insert id="save" parameterType="com.bitauto.bdc.modules.hdfs.entity.HdfsSmallFileEntity" useGeneratedKeys="true" keyProperty="hdfsSmallfileId">
        insert into tb_hdfs_smallfile
        (
        `directory`,
        `file_count`,
        `avg_size`,
        `total_size`,
        `username`,
        `create_time`
        )
        values
        (
        #{directory},
        #{fileCount},
        #{avgSize},
        #{totalSize},
        #{username},
        #{createTime}
        )
    </insert>

    <insert id="saveBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="hdfsSmallfileId">
        insert into tb_hdfs_smallfile
        (
        `directory`,
        `file_count`,
        `avg_size`,
        `total_size`,
        `username`,
        `create_time`
        )
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.directory},
            #{item.fileCount},
            #{item.avgSize},
            #{item.totalSize},
            #{item.username},
            #{item.createTime}
            )
        </foreach>
    </insert>

    <delete id="delete">
        delete from tb_hdfs_smallfile where hdfs_smallfiles_id <![CDATA[ < #{value} ]]>  LIMIT 5000
    </delete>
</mapper>