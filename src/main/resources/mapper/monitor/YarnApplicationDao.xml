<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitauto.bdc.modules.yarnApplication.monitor.dao.YarnApplicationDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity" id="yarnApplicationMap">
        <result property="id" column="id"/>
        <result property="user" column="user"/>
        <result property="name" column="name"/>
        <result property="queue" column="queue"/>
        <result property="state" column="state"/>
        <result property="finalstatus" column="finalStatus"/>
        <result property="progress" column="progress"/>
        <result property="diagnostics" column="diagnostics"/>
        <result property="applicationtype" column="applicationType"/>
        <result property="startedtime" column="startedTime"/>
        <result property="finishedtime" column="finishedTime"/>
        <result property="elapsedtime" column="elapsedTime"/>
        <result property="allocatedmb" column="allocatedMB"/>
        <result property="allocatedvcores" column="allocatedVcores"/>
        <result property="runningContainers" column="runningContainers"/>
        <result property="memoryseconds" column="memorySeconds"/>
        <result property="vcoreseconds" column="vcoreSeconds"/>
        <result property="preemptedresourcemb" column="preemptedResourceMB"/>
        <result property="preemptedresourcevcores" column="preemptedResourceVCores"/>
        <result property="numnonamcontainerpreempted" column="numNonAMContainerPreempted"/>
        <result property="numamcontainerpreempted" column="numAMContainerPreempted"/>
    </resultMap>

	<select id="queryObject" resultType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		select * from tb_yarn_application where id = #{value}
	</select>

	<select id="queryList" resultType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		select * from tb_yarn_application
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>




 	<select id="queryTotal" resultType="int">
		select count(*) from tb_yarn_application 
	</select>
	 
	<insert id="save" parameterType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		insert into tb_yarn_application
		(
			`id`, 
			`user`, 
			`name`, 
			`queue`, 
			`state`, 
			`finalStatus`, 
			`progress`, 
			`diagnostics`, 
			`applicationType`, 
			`startedTime`,
			`finishedTime`, 
			`elapsedTime`, 
			`allocatedMB`, 
			`allocatedVcores`, 
			`runningContainers`,
			`memorySeconds`, 
			`vcoreSeconds`, 
			`preemptedResourceMB`, 
			`preemptedResourceVCores`, 
			`numNonAMContainerPreempted`, 
			`numAMContainerPreempted`
		)
		values
		(
			#{id}, 
			#{user}, 
			#{name}, 
			#{queue}, 
			#{state}, 
			#{finalstatus}, 
			#{progress}, 
			#{diagnostics}, 
			#{applicationtype}, 
			#{startedtime},
			#{finishedtime}, 
			#{elapsedtime}, 
			#{allocatedmb}, 
			#{allocatedvcores}, 
			#{runningContainers},
			#{memoryseconds}, 
			#{vcoreseconds}, 
			#{preemptedresourcemb}, 
			#{preemptedresourcevcores}, 
			#{numnonamcontainerpreempted}, 
			#{numamcontainerpreempted}
		)
	</insert>

	<insert id="saveBatch" parameterType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		insert into tb_yarn_application
		(
			`id`,
			`user`,
			`name`,
			`queue`,
			`state`,
			`finalStatus`,
			`progress`,
			`diagnostics`,
			`applicationType`,
			`startedTime`,
			`finishedTime`,
			`elapsedTime`,
			`allocatedMB`,
			`allocatedVcores`,
			`runningContainers`,
			`memorySeconds`,
			`vcoreSeconds`,
			`preemptedResourceMB`,
			`preemptedResourceVCores`,
			`numNonAMContainerPreempted`,
			`numAMContainerPreempted`
		)
		values
		<foreach item="yarnApplicationEntity" index="index" collection="list"  separator="," >
			(
			#{yarnApplicationEntity.id},
			#{yarnApplicationEntity.user},
			#{yarnApplicationEntity.name},
			#{yarnApplicationEntity.queue},
			#{yarnApplicationEntity.state},
			#{yarnApplicationEntity.finalstatus},
			#{yarnApplicationEntity.progress},
			#{yarnApplicationEntity.diagnostics},
			#{yarnApplicationEntity.applicationtype},
			#{yarnApplicationEntity.startedtime},
			#{yarnApplicationEntity.finishedtime},
			#{yarnApplicationEntity.elapsedtime},
			#{yarnApplicationEntity.allocatedmb},
			#{yarnApplicationEntity.allocatedvcores},
			#{yarnApplicationEntity.runningContainers},
			#{yarnApplicationEntity.memoryseconds},
			#{yarnApplicationEntity.vcoreseconds},
			#{yarnApplicationEntity.preemptedresourcemb},
			#{yarnApplicationEntity.preemptedresourcevcores},
			#{yarnApplicationEntity.numnonamcontainerpreempted},
			#{yarnApplicationEntity.numamcontainerpreempted}
			)
		</foreach>
	</insert>
	 
	<update id="update" parameterType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		update tb_yarn_application 
		<set>
			<if test="user != null">`user` = #{user}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="queue != null">`queue` = #{queue}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="finalstatus != null">`finalStatus` = #{finalstatus}, </if>
			<if test="progress != null">`progress` = #{progress}, </if>
			<if test="diagnostics != null">`diagnostics` = #{diagnostics}, </if>
			<if test="applicationtype != null">`applicationType` = #{applicationtype}, </if>
			<if test="startedtime != null">`startedTime` = #{startedtime}, </if>
			<if test="finishedtime != null">`finishedTime` = #{finishedtime}, </if>
			<if test="elapsedtime != null">`elapsedTime` = #{elapsedtime}, </if>
			<if test="allocatedmb != null">`allocatedMB` = #{allocatedmb}, </if>
			<if test="allocatedvcores != null">`allocatedVcores` = #{allocatedvcores}, </if>
			<if test="runningContainers != null">`runningContainers` = #{runningContainers}, </if>
			<if test="memoryseconds != null">`memorySeconds` = #{memoryseconds}, </if>
			<if test="vcoreseconds != null">`vcoreSeconds` = #{vcoreseconds}, </if>
			<if test="preemptedresourcemb != null">`preemptedResourceMB` = #{preemptedresourcemb}, </if>
			<if test="preemptedresourcevcores != null">`preemptedResourceVCores` = #{preemptedresourcevcores}, </if>
			<if test="numnonamcontainerpreempted != null">`numNonAMContainerPreempted` = #{numnonamcontainerpreempted}, </if>
			<if test="numamcontainerpreempted != null">`numAMContainerPreempted` = #{numamcontainerpreempted}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tb_yarn_application where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_yarn_application where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<!--获取quene name list-->
	<select id="getQueneList" resultType="String">
		SELECT queue from tb_yarn_application group by queue
	</select>

	<!--根据队列和状态,计数-->
	<resultMap id="statisticsEntity" type="com.bitauto.bdc.modules.yarnApplication.monitor.entity.StatisticsEntity">
		<result property="count" column="count"/>
		<result property="name" column="name"/>
		<result property="state" column="state"/>
	</resultMap>

	<select id="getCountByQueneAndState" resultMap="statisticsEntity">
		SELECT count(1) as count,queue as name,state from tb_yarn_application  GROUP BY state,queue ORDER BY queue

	</select>

	<select id="getCountByQuene" resultType="int">
		SELECT count(1) as count from tb_yarn_application where queue=#{queue}
	</select>

	<select id="getCountByUser" resultMap="statisticsEntity">
		select count(1) as count,user as name
		from tb_yarn_application
		<if test="key !=null and key !=''">
		WHERE user = #{key}
		</if>
		group by user ORDER BY count desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="getCountByUserAndState" resultMap="statisticsEntity" >
		select count(1)  as count,state ,user as NAME  from tb_yarn_application group by user,state order by user
</select>

	<select id="getRunnigTask" resultMap="yarnApplicationMap">
		SELECT * from tb_yarn_application where state=#{state}
	</select>

	<select id="queryListbyState" resultType="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity">
		select * from tb_yarn_application
		WHERE state=#{state}
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>



	<select id="getQueueTaskCountByState" resultMap="statisticsEntity">
		select queue as name,count(1) as count,state  from tb_yarn_application
		where state=#{state}
		GROUP BY queue order by queue
	</select>
	
	<resultMap type="com.bitauto.bdc.modules.yarnApplication.monitor.entity.YarnApplicationEntity" id="yarnTaskMap">
        <result property="id" column="id"/>
        <result property="user" column="user"/>
        <result property="name" column="name"/>
        <result property="queue" column="queue"/>
        <result property="finalstatus" column="finalStatus"/>
        <result property="applicationtype" column="applicationType"/>
        <result property="startedtime" column="startedtime"/>
        <result property="elapsedtime" column="elapsedTime"/>
        <result property="allocatedmb" column="allocatedMB"/>
        <result property="allocatedvcores" column="allocatedVcores"/>
    </resultMap>
	
	<select id="queryListbyQueue" resultMap="yarnTaskMap">
		select id,user,name,queue,finalstatus,applicationtype,startedtime,elapsedtime,allocatedmb,allocatedvcores  from tb_yarn_application
		where queue=#{queue} and startedtime &lt;=#{insertTime} and finishedtime &gt;=#{insertTime}
		order by allocatedmb, allocatedvcores desc limit #{showCount}
	</select>
	
	<select id="queryTotalbyQueue" resultType="int">
		select count(*) from tb_yarn_application where queue=#{queue} and startedtime &lt;=#{insertTime} and finishedtime &gt;=#{insertTime}
	</select>
	
	<delete id="deleteByInsertTime">
		delete from tb_yarn_application where finishedTime &lt;= #{oldTime}
	</delete>
</mapper>